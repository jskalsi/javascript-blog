{"version":3,"sources":["components/Nav.js","pages/About.js","pages/CreateArticle.js","pages/Not-found.js","components/Comments.js","components/CommentForm.js","pages/Article.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["Nav","to","Component","About","className","CreateArticle","props","createArticle","axios","post","title","state","content","upvotes","then","setState","catch","error","console","log","type","value","this","onChange","e","target","rows","cols","onClick","NotFound","Comments","comments","map","comment","index","key","username","text","CommentForm","addComment","id","updateComments","Article","upvote","article","get","results","data","Home","articles","_id","substring","App","path","component","exact","match","params","Notfound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7a78fd42.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Nav extends Component {\r\n    render (){\r\n        return (\r\n            <nav>\r\n                <h2><Link to=\"/\">Home</Link></h2>\r\n                <ul>\r\n                    <li><Link to=\"/\">Home</Link></li>\r\n                    <li><Link to=\"/create\">Post</Link></li>\r\n                    <li><Link to=\"/about\">About</Link></li>\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav;","import React, {Component} from 'react';\r\n\r\nclass About extends Component{\r\n    render(){\r\n        return (\r\n            <div className=\"about\">\r\n                <h1>About this app</h1>\r\n                <h3>Hi, This is a blog application built using the MERN stack</h3>\r\n                <h3>More feature coming soon! </h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nclass CreateArticle extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n            title:'',\r\n            content:''\r\n        }\r\n    }\r\n\r\n    createArticle = () => {\r\n        axios.post(`https://javascript-blog-backend.herokuapp.com/api/article/create`,{\r\n            title:this.state.title,\r\n            content:this.state.content,\r\n            upvotes:0\r\n        })\r\n        .then(()=>{\r\n            this.setState({\r\n                title:\"\",\r\n                content:\"\"\r\n            })\r\n        })\r\n        .catch(error=>console.log(error));\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"form\">\r\n                <h1>Post a new article</h1>\r\n                <div>\r\n                    <label>\r\n                        Title:\r\n                        <input type=\"text\" value={this.state.title} onChange={(e) => this.setState({title:e.target.value})}/>\r\n                    </label>\r\n                    <label>\r\n                        Content:\r\n                        <textarea rows=\"15\" cols=\"100\" value={this.state.content} onChange={(e) => this.setState({content:e.target.value})}/>\r\n                    </label>\r\n                    <button type='submit' onClick={this.createArticle}>Submit</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateArticle;","import React, { Component } from 'react';\r\n\r\nclass NotFound extends Component{\r\n    render(){\r\n        return (\r\n            <h1>Oops!! Page not found</h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React, {Component} from 'react';\r\n\r\nclass Comments extends Component {\r\n    render(){\r\n        return (\r\n            <>\r\n                <h3>Comments:</h3>\r\n                {this.props.comments.map((comment, index) => (\r\n                    <div key={index}>\r\n                        <h4>{comment.username}</h4>\r\n                        <p>{comment.text}</p>\r\n                    </div>\r\n                ))}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Comments;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nclass CommentForm extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n            username:'',\r\n            text:''\r\n        }\r\n    }\r\n\r\n    addComment = () => {\r\n        axios.post(`https://javascript-blog-backend.herokuapp.com/api/article/${this.props.id}/add-comment`,{\r\n            username:this.state.username,\r\n            text:this.state.text\r\n        })\r\n        .then(()=>{\r\n            this.setState({\r\n                username:\"\",\r\n                text:\"\"\r\n            })\r\n        })\r\n        .then(()=>{\r\n            this.props.updateComments();\r\n        })\r\n        .catch(error=>console.log(error));\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"form\">\r\n                <h3>Add a comment:</h3>\r\n                <div>\r\n                    <label>\r\n                        Name:\r\n                        <input type=\"text\" value={this.state.username} onChange={(e) => this.setState({username:e.target.value})}/>\r\n                    </label>\r\n                    <label>\r\n                        Comment:\r\n                        <textarea rows=\"5\" cols=\"50\" value={this.state.text} onChange={(e) => this.setState({text:e.target.value})}/>\r\n                    </label>\r\n                    <button type='submit' onClick={this.addComment}>Submit</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CommentForm;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Notfound from './Not-found';\r\nimport Comments from '../components/Comments';\r\nimport CommentForm from '../components/CommentForm';\r\n\r\nclass Article extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n            article:{},\r\n            upvotes:'',\r\n            comments:[]\r\n        }\r\n    }\r\n\r\n    updateComments(){\r\n        // Use Axios to load data from Dog API\r\n        axios.get(`https://javascript-blog-backend.herokuapp.com/api/article/${this.props.id}`)\r\n        .then(results=>{\r\n            this.setState({\r\n                upvotes:results.data.upvotes,\r\n                comments:results.data.comments\r\n            })\r\n        })\r\n        .catch(error=>console.log(error));\r\n    }\r\n\r\n    componentDidMount() {\r\n        // This code will be run immediately after the component is created.\r\n        this.updateComments();\r\n\r\n        axios.get(`https://javascript-blog-backend.herokuapp.com/api/article/${this.props.id}`)\r\n        .then(results=>{\r\n            this.setState({\r\n                article:results.data\r\n            })\r\n        })\r\n        .catch(error=>console.log(error));\r\n    }\r\n\r\n    upvote = () =>{\r\n        axios.post(`https://javascript-blog-backend.herokuapp.com/api/article/${this.props.id}/upvote`)\r\n        .then(()=>{\r\n            this.setState({\r\n                upvotes:this.state.upvotes+1\r\n            });\r\n        })\r\n        .catch(error=>console.log(error));\r\n    }\r\n    \r\n    render(){\r\n        const id = this.props.id;\r\n        const article = this.state.article;\r\n\r\n        if(!article) return <Notfound />;\r\n        return (\r\n            <>\r\n                <h1>{article.title}</h1>\r\n                <div className=\"upvote\">\r\n                    <button onClick={this.upvote}>Add upvote</button>\r\n                    <p>This post has been upvoted {this.state.upvotes}</p>\r\n                </div>\r\n                <p>{article.content}</p>\r\n                <div className=\"comments\">\r\n                    <Comments comments={this.state.comments}/>\r\n                    <CommentForm id={id} updateComments={this.updateComments()}/>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Article;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n            articles: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://javascript-blog-backend.herokuapp.com/api/articles`)\r\n        .then(results=>{\r\n            this.setState({\r\n                articles:results.data\r\n            })\r\n        })\r\n        .catch(error=>console.log(error));\r\n    }\r\n\r\n    render(){\r\n        const articles = this.state.articles;\r\n\r\n        return (\r\n            <div className=\"articles\">\r\n                <h1>Articles</h1>\r\n                {articles.map((article,index) => (\r\n                    <Link key={index} to={`/article/${article._id}`}>\r\n                        <h3 >{article.title}</h3>\r\n                        <p>{article.content.substring(0, 150)}...</p>\r\n                    </Link>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Nav from './components/Nav';\nimport About from './pages/About';\nimport CreateArticle from './pages/CreateArticle';\nimport Article from './pages/Article';\nimport Home from './pages/Home';\nimport Notfound from './pages/Not-found';\nimport './App.css';\n\nclass App extends Component {\n  render(){\n    return (\n      <BrowserRouter>\n          <div className=\"App\">\n            <Nav />\n            <Switch>\n              <Route \n                path=\"/\"\n                component={Home}\n                exact\n              />\n\n              <Route \n                path=\"/create\"\n                component={CreateArticle}\n              />\n\n              <Route \n                path=\"/about\"\n                component={About}\n              />\n\n              <Route \n                path=\"/article/:id\"\n                component={(id)=><Article id={id.match.params.id}/>}\n              />\n\n              <Route\n                component={Notfound}\n              />\n            </Switch>\n          </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}